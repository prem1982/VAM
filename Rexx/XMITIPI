        /* ---------------------  rexx procedure  ------------------- */        
        ver = "4.46"                                                            
        /* Name:      XMITIPI                                         *         
         *                                                            *         
         * Function:  To drive the ISPF Interface to the XMITIP       *         
         *            application.                                    *         
         *                                                            *         
         * Notes:     Normally invoked by the XMITIP command if no    *         
         *            parameters are specified and ISPF is active.    *         
         *                                                            *         
         * Syntax:    %xmitipi parm                                   *         
         *                                                            *         
         *            if parm is not null then debug is activated.    *         
         *                                                            *         
         * Author:    Lionel B. Dyck                                  *         
         *            Kaiser Permanente                               *         
         *            Walnut Creek, CA 94598                          *         
         *            (925) 926-5332                                  *         
         *            Internet: lionel.b.dyck@kp.org                  *         
         *                                                            *         
         * History:                                                   *         
         *            11/17/01:- 4.46 change to match xmitip level    *         
         *                     - add format validation code           *         
         *                     - if format ? then return to panel     *         
         *                       after format defined                 *         
         *                     - change ldap lookup to popup panels   *         
         *                     - change fix_format to popup panels    *         
         *                     - change to support ldap lookup only   *         
         *                     - update for xmitipcu antispoof        *         
         *                     - update for xmitipcu font_size and    *         
         *                       def_orient                           *         
         *            10/01/01:- 4.45 change to match xmitip level    *         
         *            09/20/01:- 4.44 support debug option on panel   *         
         *                     - fix format of generated cc           *         
         *                     - fix copy of jcl if member new        *         
         *                       and if pds member add ispf stats     *         
         *            08/22/01:- 4.43 add blank line to report        *         
         *                            after the generated command     *         
         *                       - add empty_opt to xmitipcu          *         
         *            08/01/01:- 4.42 fix if left margin not defined  *         
         *                            was ignoring all margins        *         
         *            07/27/01:- 4.41 add batch option                *         
         *                       - change smcopy to execio 4 copy     *         
         *                       - Add disclaim (xmitipcu)            *         
         *            06/22/01:- 4.40 fix for ldap lookup             *         
         *                            fix for dist list in table      *         
         *            06/14/01:- 4.39 change level to match xmitip    *         
         *            06/06/01:- 4.38 change level to match xmitip    *         
         *            05/29/01:- 4.37                                 *         
         *                       - Add char (xmitipcu)                *         
         *            05/21/01:- 4.36                                 *         
         *                       - Add Addressfile panel option.      *         
         *                         - Saveaf to save selected addrs    *         
         *                         - Loadaf to load from addrfile     *         
         *                       - Save addressfile in address table  *         
         *                       - Add support for GDG attachments    *         
         *                       - Move Format prompt and change to   *         
         *                         not return to the display          *         
         *                       - add support for AtSign (FEC)       *         
         *                       - add support for ISPFFROM flag      *         
         *                       - Support new L (loadaf) on address  *         
         *                       - Support B to Browse the AddressFile*         
         *                       - Support E to Edit the AddressFile  *         
         *                       - Support S on address to select     *         
         *                         addressfile                        *         
         *                       - change address sort order          *         
         *                       - when adding addresses cap first let*         
         *                       - allow attachment dsn of * instead  *         
         *                         of *create*                        *         
         *            xx/xx/xx:- 4.35 beta level                      *         
         *            03/23/01:- 4.34 Level change to XMITIP only.    *         
         *            03/09/01:- 4.33 Add test for hfs file exist.    *         
         *                       - Enable HFS File attachments        *         
         *            02/20/01:- 4.32a set return code if pf3         *         
         *            02/07/01:- 4.32 fix insert lookup invalid msg   *         
         *            01/23/01:- 4.31 change level to match XMITIP    *         
         *                     - clean up history                     *         
         *            01/16/01:- 4.30 add test on reinvoke for error  *         
         *                     -  report on sigdsn if defined         *         
         *            12/21/00:- 4.29 add test for sigdsn             *         
         *            12/13/00:- 4.28 change to match xmitip level    *         
         *                     - fix report to add + for cc           *         
         *            12/01/00:- 4.27 Fix serialization of XMITIPI    *         
         *            11/28/00:- 4.26 Prevent duplicate addresses     *         
         *                     - fix pfz -> fpz (bug)                 *         
         *            11/22/00:- 4.25 Invoke XMITIPCU for ldap info   *         
         *            11/21/00:- 4.25 fix to fit cols 1-72            *         
         *                       - also for dsn table fix null sel    *         
         *                         dsn validation.                    *         
         *            11/13/00:- 4.25 Add support for XMITIPID to     *         
         *                            validate local addresses        *         
         *                     - plus support XMITIPML to look up     *         
         *                       addresses via ldap                   *         
         *            11/04/00:- 4.22 change level to match xmitip    *         
         *            ..                                              *         
         *            06/15/99 - created                              *         
         *                                                            *         
         * the version reflects the current version of XMITIP while   *         
         * the letter suffix is an indication of updates to this code.*         
         * ---------------------------------------------------------- */        
         arg options                                                            
                                                                                
         Signal on NoValue                                                      
                                                                                
        /* ----------------------------------------------------- *              
         * If options non-null then trace                        *              
         * ----------------------------------------------------- */             
         if options <> "" then do                                               
            options = translate(options)                                        
            select                                                              
               when options = "DEBUG" then trace "?i"                           
               when options = "TEST" then nop                                   
               otherwise nop                                                    
               end                                                              
            end                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * Test for ISPF Applid of XMIT and if not then recurse  *              
         * with that Applid.                                     *              
         * ----------------------------------------------------- */             
        Address ISPEXEC                                                         
        "Control Errors Return"                                                 
        "VGET ZAPPLID"                                                          
          if zapplid <> "XMIT" then do                                          
             "TBCreate xmitcmds names(zctverb zcttrunc zctact" ,                
                       "zctdesc) replace share nowrite"                         
             zctverb = "RFIND"                                                  
             zcttrunc = 0                                                       
             zctact = "&XMTRFIND"                                               
             zctdesc = "RFIND for XMITIP"                                       
             parse value "" with zerrtype zerrlm                                
             "TBAdd xmitcmds"                                                   
             "Select CMD(%"sysvar('sysicmd') options ") Newappl(XMIT)" ,        
                 "passlib scrname(XMITIP)"                                      
             x_rc = rc                                                          
             "TBClose xmitcmds"                                                 
             if x_rc > 0 then do                                                
                zedsmsg = zerrtype                                              
                zedlmsg = zerrlm                                                
               "Setmsg Msg(isrz001)"                                            
                end                                                             
             Exit 0                                                             
             end                                                                
                                                                                
        /* ----------------------------------------------------- *              
         * Invoke XMITIPCU for local customization values        *              
         * ----------------------------------------------------- */             
        cu = xmitipcu()                                                         
                                                                                
        /* ----------------------------------------------------- *              
         * parse the customization defaults to use them here     *              
         * ----------------------------------------------------- */             
        /*FEC 20010423: AtSign Support                           */             
        parse value cu with center "/" zone "/" smtp "/" ,                      
                vio "/" smtp_secure "/" smtp_address "/" ,                      
                smtp_domain "/" font "/" tenter "/" ,                           
                sysout_class "/" from_center "/" writer "/" ,                   
                mtop "/" mbottom "/" mleft "/" mright "/" ,                     
                host "/" name "/" domain "/" from_default ,                     
                "/" append_domain "/" zip_type "/" zip_load "/" ,               
                zip_unit "/" interlink "/" size_limit "/" ,                     
                b64_load "/" batch_idval "/" create_dsn_lrecl ,                 
                "/" receipt_type "/" paper_size "/" file_suf ,                  
                "/" mail_relay "/" AtSign "/" ispffrom "/" char ,               
                "/" charuse "/" disclaim "/" empty_opt ,                        
                "/" font_size "/" def_orient ,                                  
                "/" antispoof                                                   
                                                                                
         AtSign        = left(strip(AtSign),1,"@")                              
         ispffrom      = strip(ispffrom)                                        
                                                                                
        /* ---------------------------------------------------------- *         
         * Set several default values                                 *         
         * ---------------------------------------------------------- */        
         parse value "" with zippass null ldap c_fileo c_file                   
                                                                                
        /* ---------------------------------------------------------- *         
         * Set default value for LDAP Access                          *         
         * ---------------------------------------------------------- */        
         x=xmitldap()                                                           
         parse value x with server .                                            
         if server = 0 then ldap = 1                                            
                       else ldap = 0                                            
                                                                                
        /* ---------------------------------------------------------- *         
         * Test ldap value and compare with batch id validation       *         
         * ---------------------------------------------------------- */        
         if ldap = 0 then                                                       
            if batch_idval = 1                                                  
               then ldap = 1                                                    
                                                                                
        /* ----------------------------------------------------- *              
         * Display ISPF Panel XMITIP                             *              
         * ----------------------------------------------------- */             
         Display:                                                               
         Address ISPExec                                                        
         "Control Errors Return"                                                
         "Vget (left right top bottom paper)"                                   
         if datatype(left)   <> "NUM" then left   = null                        
         if datatype(right)  <> "NUM" then right  = null                        
         if datatype(top)    <> "NUM" then top    = null                        
         if datatype(bottom) <> "NUM" then bottom = null                        
                                                                                
        /* --------------------------------------------------------- *          
         * Reset AddressFile to blank                                *          
         * --------------------------------------------------------- */         
         addrfile = null                                                        
                                                                                
        /* --------------------------------------------------------- *          
         * Get variables from the profile                            *          
         * --------------------------------------------------------- */         
        "Vget (from replyto sigdsn mur import prior sens receipt)" ,            
           "Profile"                                                            
        "Vget (format zippass zipmeth filename addrfile execmode)" ,            
           "Profile"                                                            
                                                                                
        /* ---------------------------------------------------------- *         
         * Display the ISPF Panel until PF3 or user Exits             *         
         * ---------------------------------------------------------- */        
         do forever                                                             
            parse value "" with c_format c_margin c_to ,                        
                       c_cc c_bcc zcmd addr_table att c_mur,                    
                       tb_open c_filedesc c_filename c_zippass ,                
                       c_zipmethod                                              
            "Display Panel(xmitip)"                                             
            if rc > 7 then do                                                   
               exit 4                                                           
               end                                                              
            call do_it                                                          
         end                                                                    
                                                                                
         Do_it:                                                                 
        /* ---------------------------------------------------------- *         
         * Do_IT is where we process all the user specified           *         
         * information on the Panel.                                  *         
         * ---------------------------------------------------------- */        
                                                                                
        /* --------------------------------------------------------- *          
         * Save variables in the Profile                             *          
         * --------------------------------------------------------- */         
         "Vput (from replyto sigdsn mur import prior sens receipt)" ,           
               "Profile"                                                        
         "Vput (format zippass zipmeth filename addrfile execmode)" ,           
               "Profile"                                                        
                                                                                
        /* --------------------------------------------------------- *          
         * Test the Format option for ?                              *          
         * --------------------------------------------------------- */         
         if left(format,1) = "?" then do                                        
            call fix_format format                                              
            if new_format <> null then do                                       
               format = new_format                                              
               "Vput (format)"                                                  
               zedsmsg = "Format Set"                                           
               zedlmsg = "Format set to" format                                 
              "Setmsg Msg(isrz001)"                                             
              end                                                               
            signal display                                                      
            end                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * If AddressFile specified then validate it             *              
         * ----------------------------------------------------- */             
         if length(addrfile) > 0 then                                           
            if "OK" <> sysdsn(addrfile) then do                                 
               zedsmsg = null                                                   
               zedlmsg = "Address File DSN Error:" addrfile sysdsn(addrfile) ,  
                         "Correct and retry."                                   
              "Setmsg Msg(isrz001)"                                             
               return                                                           
               end                                                              
                                                                                
        /* ----------------------------------------------------- *              
         * If Signature DSN specified then validate it           *              
         * ----------------------------------------------------- */             
         if length(sigdsn) > 0 then                                             
            if "OK" <> sysdsn(sigdsn) then do                                   
               zedsmsg = null                                                   
               zedlmsg = "Signature DSN Error:" sigdsn sysdsn(sigdsn) ,         
                         "Correct and retry."                                   
              "Setmsg Msg(isrz001)"                                             
               return                                                           
               end                                                              
                                                                                
        /* ----------------------------------------------------- *              
         * Save values to ISPF Profile for future use.           *              
         * ----------------------------------------------------- */             
        "Vput (to msgds bcc cc from subject file font paper style",             
               "left right top bottom sigdsn" ,                                 
               "sens import mur prior filedesc " ,                              
               ") profile"                                                      
                                                                                
        /* ----------------------------------------------------- *              
         * Retrieve saved profile values.                        *              
         * ----------------------------------------------------- */             
           "Vget (b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc)"                         
           "Vget (c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb ccx)"                        
           "Vget (f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc)"                         
           "Vget (ss1 ss2 ss3 ss4 ss5 ss6 ss7 ss8",                             
                              "ss9 ssa ssb ssc)"                                
           "Vget (ssf1 ssf2 ssf3 ssf4 ssf5 ssf6 ssf7 ssf8",                     
                              "ssf9 ssfa ssfb ssfc)"                            
           "Vget (ssp1 ssp2 ssp3 ssp4 ssp5 ssp6 ssp7 ssp8",                     
                              "ssp9 sspa sspb sspc)"                            
           "Vget (sl1 sl2 sl3 sl4 sl5 sl6 sl7 sl8",                             
                              "sl9 sla slb slc)"                                
           "Vget (sr1 sr2 sr3 sr4 sr5 sr6 sr7 sr8",                             
                              "sr9 sra srb src)"                                
           "Vget (st1 st2 st3 st4 st5 st6 st7 st8",                             
                              "st9 sta stb stc)"                                
           "Vget (sb1 sb2 sb3 sb4 sb5 sb6 sb7 sb8",                             
                              "sb9 sba sbb sbc)"                                
                                                                                
        /* ----------------------------------------------------- *              
         * If To is ? then display selection list of To address  *              
         * ----------------------------------------------------- */             
         inv = 0                                                                
         if to <> "?" then do                                                   
            call process_address to                                             
            if parens = 1 then signal display                                   
            if tb_open <> 1 then                                                
               call build_address_table                                         
            to   = translate(to," ",",")                                        
            c_to = to                                                           
            ename = null                                                        
            do i = 1 to words(t_addrs)                                          
               eaddr = word(t_addrs,i)                                          
               ename = t_names.i                                                
               if ename = null then call fix_name eaddr                         
               if left(eaddr,1) = "*" then iterate                              
        /*FEC 20010423: AtSign Support  */                                      
               if pos(AtSign,eaddr) > 0 then do                                 
                  pat = pos(AtSign,eaddr)                                       
                  if pos(AtSign,eaddr,pat+1) > 0 then inv = 1                   
                  if pos(":",eaddr,pat+1) > 0 then inv = 0                      
                  end                                                           
               if inv = 1 then iterate                                          
               x_rc = test_address(eaddr)                                       
               eaddru = translate(eaddr)                                        
               atype = null                                                     
               if x_rc = 0 then                                                 
                  "TBAdd" tblname "Order"                                       
               else do                                                          
                    zedsmsg = "Error"                                           
                    zedlmsg = "Invalid address:" eaddr                          
                   "Setmsg Msg(isrz001)"                                        
                    return                                                      
                    end                                                         
               end                                                              
            end                                                                 
         else do                                                                
              if tb_open <> 1 then                                              
                 call build_address_table                                       
              call do_address_table                                             
              addr_table = 1                                                    
              end                                                               
          call save_addr_table                                                  
          if inv = 1 then parse value "" with c_to c_cc c_bcc                   
          if length(c_to) + length(c_cc) + length(c_bcc) > 0 then do            
                  if length(c_to) = 0                                           
                       then c_to = "*"                                          
                  end                                                           
          else do                                                               
             if inv = 0 then do                                                 
                zedsmsg = "No Selections"                                       
                zedlmsg = "No addresses were selected."                         
                end                                                             
             else do                                                            
                zedsmsg = "Error"                                               
                zedlmsg = "Invalid Address - too many "AtSign"'s."              
                end                                                             
             "Setmsg Msg(isrz001)"                                              
             return                                                             
             end                                                                
                                                                                
        /* ----------------------------------------------------- *              
         * Test for a To address - if not error message          *              
         * ----------------------------------------------------- */             
         if length(c_to) = 0 then do                                            
            zedsmsg = null                                                      
            zedlmsg = "Error: A To address must be specified."                  
            "Setmsg Msg(isrz001)"                                               
            return                                                              
            end                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * For bcc, cc, file, plus paper, style, and margins     *              
         * get additional information if coded as a +            *              
         * ----------------------------------------------------- */             
         if c_bcc = null then                                                   
            if bcc <> "+" then                                                  
               if bcc = "?" then call do_address_table2                         
               else                                                             
               if c_bcc = null then do                                          
                  bcc = translate(bcc," ",",")                                  
                  c_bcc = bcc                                                   
                  end                                                           
         if c_bcc = null then                                                   
           if bcc = "+" then do forever                                         
            zcmd = null                                                         
            "Display Panel(xmitipi1)"                                           
            d_rc = rc                                                           
            if translate(zcmd) = "CANCEL" then return                           
            if translate(zcmd) = "CLEAR" then                                   
               parse value "" with b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc          
            if d_rc > 7 then do                                                 
               c_bcc = strip(b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc)               
               "Vput (b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc) profile"             
               end                                                              
            if d_rc > 7 then leave                                              
            end                                                                 
                                                                                
         if c_cc = null then                                                    
            if cc <> "+" then                                                   
               if cc = "?" then call do_address_table2                          
               else do                                                          
                    cc = translate(cc," ",",")                                  
                    if c_cc = null then c_cc = cc                               
                    end                                                         
         if c_cc = null then                                                    
           if cc = "+" then do forever                                          
            zcmd = null                                                         
            "Display Panel(xmitipi2)"                                           
            d_rc = rc                                                           
            if translate(zcmd) = "CANCEL" then return                           
            if translate(zcmd) = "CLEAR" then                                   
               parse value "" with c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb ccx         
            if d_rc > 7 then do                                                 
               c_cc = strip(c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb ccx)               
               "Vput (c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb ccx) Profile"            
               end                                                              
            if d_rc > 7 then leave                                              
            end                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * Process File - call do_attachment_table if ?          *              
         * ----------------------------------------------------- */             
         if file <> "?" then do                                                 
            d_rc = 1                                                            
            if file <> null then do                                             
               call test_gdg  file                                              
               if file_dsn <> file                                              
                  then file = file_dsn                                          
               call test_file file                                              
               end                                                              
            if d_rc = 0 then return                                             
            if pos("/",file) > 0 then                                           
               c_fileo = file                                                   
            else c_file = file                                                  
            form_over = 0                                                       
            end                                                                 
         else do                                                                
              call do_attachment_table                                          
              style = null                                                      
              font  = null                                                      
              parse value "" with c_file c_margin c_filename c_format,          
                                  c_fileo                                       
              call get_attachments 1                                            
              call get_attachments 2                                            
              if words(c_file) > 1 then                                         
                  c_file = "("strip(c_file)")"                                  
              else                                                              
                  c_file = strip(c_file)                                        
              if words(c_fileo) > 1 then                                        
                  c_fileo = "("strip(c_fileo)")"                                
              else                                                              
                  c_fileo = strip(c_fileo)                                      
              if c_filedesc <> null then do                                     
                 ok = 0                                                         
                 do cf = 1 to words(c_filedesc)                                 
                    if translate(word(c_filedesc,cf)) <> "X"                    
                       then ok = 1                                              
                    end                                                         
                 if ok = 0 then c_filedesc = null                               
                 if words(c_filedesc) > 1 then                                  
                    c_filedesc = "Filedesc ("strip(c_filedesc)")"               
                 else do                                                        
                    if length(c_filedesc) > 0 then                              
                       c_filedesc = "Filedesc "strip(c_filedesc)                
                    end                                                         
                 end                                                            
              if c_format <> null then do                                       
                 ok = 0                                                         
                 do cf = 1 to words(c_format)                                   
                    if translate(word(c_format,cf)) <> "X"                      
                       then ok = 1                                              
                    end                                                         
                 if ok = 0 then c_format = null                                 
                 if words(c_format) > 1 then                                    
                    c_format = "Format ("strip(c_format)")"                     
                 else do                                                        
                    if length(c_format) > 0 then                                
                       c_format = "Format "strip(c_format)                      
                    end                                                         
                 end                                                            
              if c_filename <> null then do                                     
                 ok = 0                                                         
                 do cf = 1 to words(c_filename)                                 
                    if translate(word(c_filename,cf)) <> "X"                    
                       then ok = 1                                              
                    end                                                         
                 if ok = 0 then c_filename = null                               
                 if words(c_filename) > 1 then                                  
                    c_filename = "Filename ("strip(c_filename)")"               
                 else do                                                        
                    if length(strip(c_filename)) > 0 then                       
                       c_filename = "Filename "strip(c_filename)                
                    end                                                         
                 end                                                            
              if c_margin <> null then do                                       
                 w_margin = space(c_margin,0)                                   
                 t_margin = left("/",length(w_margin),"/")                      
                 if w_margin <> t_margin                                        
                    then c_margin = "Margin ("strip(c_margin)")"                
                    else c_margin = null                                        
                 end                                                            
              "TBClose" tblname "Library(ISPPRof)"                              
          end                                                                   
                                                                                
        /* ----------------------------------------------------- *              
         * Test for FORMAT Prompt                                *              
         * ----------------------------------------------------- */             
         if c_format = null then                                                
          if format <> null then do                                             
            call test_format format                                             
            if erc > 0 then signal display                                      
            end                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * Test Importance                                       */             
         test = translate(import)                                               
         select                                                                 
           when abbrev("HIGH",test,1)   then import = "High"                    
           when abbrev("LOW",test,1)    then import = "Low"                     
           when abbrev("NORMAL",test,1) then import = "Normal"                  
           otherwise nop;                                                       
           end                                                                  
                                                                                
        /* ----------------------------------------------------- *              
         * Test prior                                            */             
         test = translate(prior)                                                
         select                                                                 
           when abbrev("URGENT",test,1) then prior = "Urgent"                   
           when abbrev("HIGH",test,1)   then prior = "Urgent"                   
           when abbrev("NON-URGENT",test,3) then                                
                prior = "Non-Urgent"                                            
           when abbrev("LOW",test,1) then                                       
                prior = "Non-Urgent"                                            
           when abbrev("NORMAL",test,3) then prior = "Normal"                   
           otherwise nop;                                                       
           end                                                                  
                                                                                
        /* ----------------------------------------------------- *              
         * Test sens                                             */             
         test = translate(sens)                                                 
           select                                                               
             when abbrev("CONFIDENTIAL",test,3) then                            
                  sens = "Confidential"                                         
             when abbrev("COMPANY-CONFIDENTIAL",test,3) then                    
                  sens = "Company-Confidential"                                 
             when abbrev("PRIVATE",test,2) then                                 
                  sens = "Private"                                              
             when abbrev("PERSONAL",test,2) then                                
                  sens = "Personal"                                             
             otherwise nop;                                                     
             end                                                                
                                                                                
        /* ----------------------------------------------------- *              
         * Save updated values                                   */             
         "Vput (import prior sens) Profile"                                     
                                                                                
        /* ----------------------------------------------------- *              
         * Test each of the keywords and set to null if not      *              
         * specified.                                            *              
         * ----------------------------------------------------- */             
        if translate(msgds) = "HTML" then do                                    
           c_msgds = "MSGDS * HTML"                                             
           end                                                                  
           else do                                                              
                if length(msgds)   > 0 then do                                  
                   if translate(msgds) = "NOMSG"                                
                      then c_msgds = "Nomsg"                                    
                      else c_msgds = "Msgds" msgds                              
                      end                                                       
                else c_msgds = "Nomsg"                                          
                   end                                                          
        if length(addrfile) > 0                                                 
           then c_addrfile = "Addressfile" addrfile                             
           else c_addrfile = null                                               
        if length(sigdsn)  > 0 then c_sigds = "Sig" sigdsn                      
                               else c_sigds = null                              
        if length(import)  > 0 then c_import = "Importance" import              
                               else c_import = null                             
        if length(filedesc) > 0                                                 
           then do                                                              
                if words(filedesc) > 1 then                                     
                   filedesc = translate(filedesc,"-"," ")                       
                c_filedesc = "Filedesc" filedesc                                
                end                                                             
        if length(filename) > 0                                                 
           then do                                                              
                if words(filename) > 1 then                                     
                   filename = translate(filename,"-"," ")                       
                c_filename = "Filename" filename                                
                end                                                             
        if form_over = 0 then do                                                
           if length(format) > 0                                                
              then do                                                           
                   if words(format) > 1 then                                    
                      format = translate(format,"-"," ")                        
                   c_format = "Format" format                                   
                   end                                                          
           end                                                                  
        if length(sens)    > 0 then c_sens   = "Sensitivity" sens               
                               else c_sens   = null                             
        if length(prior)   > 0 then c_prior  = "Priority" prior                 
                               else c_prior  = null                             
        if length(mur)     > 0 then                                             
                               if left(mur,1) = "Y" then                        
                                  c_mur = "Murphy"                              
                               else c_mur = null                                
        if length(c_bcc)   > 0 then do                                          
                               c_bcc = strip(c_bcc)                             
                               if words(c_bcc) > 1 then                         
                                  c_bcc = "Bcc ("c_bcc")"                       
                                  else c_bcc = "bcc" c_bcc                      
                               end                                              
                               else c_bcc = null                                
        if length(c_cc)    > 0 then do                                          
                               c_cc = strip(c_cc)                               
                               if words(c_cc) > 1 then                          
                                  c_cc = "Cc ("c_cc")"                          
                                  else c_cc = "cc" c_cc                         
                               end                                              
                               else c_cc = null                                 
        if length(from)    > 0 then c_from = "From" from                        
                               else c_from = null                               
        if length(replyto) > 0 then c_replyto = "Replyto" replyto               
                               else c_replyto = null                            
        if length(receipt) > 0 then c_receipt = "Receipt" receipt               
                               else c_receipt = null                            
        if length(subject) = 0 then c_subject = null                            
           else do                                                              
                qt = '"'                                                        
                qt = qt"'"                                                      
                if pos(left(subject,1),qt) = 0 then                             
                   c_subject = "Subject '"subject"'"                            
                else                                                            
                   c_subject = "Subject" subject                                
                end                                                             
        if length(c_file)  > 0 then c_file = "File" c_file                      
                               else c_file = null                               
        if length(c_fileo) > 0 then c_fileo = "FileO" c_fileo                   
                               else c_fileo = null                              
        cf = length(c_file) + length(c_fileo)                                   
        if cf > 0 then                                                          
           if length(c_format) > 0 then do                                      
              if c_margin = null then                                           
                 if file <> "?" then do                                         
                 if strip(length(left""right""top""bottom))    > 0              
                    then c_margin = "Margin" left"/"right"/"top"/"bottom        
                    else c_margin = null                                        
                 end                                                            
              end                                                               
        if pos(left(c_format,1),"X x") > 0 then c_margin = null                 
        if length(c_format) = 0 then c_margin = null                            
        if pos("RTF",translate(c_format)) = 0 then                              
           if pos("PDF",translate(c_format)) = 0 then                           
              c_margin = null                                                   
                                                                                
        if length(zipmeth) > 0 then                                             
                               c_zipmethod = "ZipMethod" zipmeth                
                               else c_zipmethod = null                          
        if length(zippass) > 0 then                                             
                               c_zippass = "ZipPass" zippass                    
                               else c_zippass = null                            
        if length(c_file) + length(c_fileo) = 0 then do                         
           c_zipmethod = null                                                   
           c_zippass   = null                                                   
           c_format    = null                                                   
           end                                                                  
                                                                                
        /* ----------------------------------------------------- *              
         * Make sure the cc and bcc are in the e-mail table      *              
         * ----------------------------------------------------- */             
         "TBOpen xmitaddr Write Library(ISPPROF)"                               
         if pos("(",c_to) > 0 then parse value c_to with "(" t_to ")"           
                            else t_to = c_to                                    
         if pos("(",c_cc) > 0 then parse value c_cc with . "(" t_cc ")"         
                            else parse value c_cc with x t_cc                   
         if pos("(",c_bcc) > 0 then parse value c_bcc with . "("t_bcc")"        
                            else parse value c_bcc with x t_bcc                 
         call process_address t_to                                              
         if parens = 1 then signal display                                      
         do i = 1 to words(t_addrs)                                             
            ename = t_names.i                                                   
            eaddr = word(t_addrs,i)                                             
            if ename = null then call fix_name eaddr                            
            if left(eaddr,1) = "*" then iterate                                 
             x_rc = test_address(eaddr)                                         
             if x_rc = 0 then                                                   
               "TBAdd xmitaddr"                                                 
               else do                                                          
                    zedsmsg = "Error"                                           
                    zedlmsg = "Invalid To address:" eaddr                       
                   "Setmsg Msg(isrz001)"                                        
                    call close_addr                                             
                    signal display                                              
                    end                                                         
            end                                                                 
         call process_address t_cc                                              
         if parens = 1 then signal display                                      
         do i = 1 to words(t_addrs)                                             
            ename = t_names.i                                                   
            eaddr = word(t_addrs,i)                                             
            if ename = null then call fix_name eaddr                            
             x_rc = test_address(eaddr)                                         
             if x_rc = 0 then                                                   
               "TBAdd xmitaddr"                                                 
               else do                                                          
                    zedsmsg = "Error"                                           
                    zedlmsg = "Invalid CC address:" eaddr                       
                   "Setmsg Msg(isrz001)"                                        
                    call close_addr                                             
                    signal display                                              
                    end                                                         
            end                                                                 
         call process_address t_bcc                                             
         if parens = 1 then signal display                                      
         do i = 1 to words(t_addrs)                                             
            ename = t_names.i                                                   
            eaddr = word(t_addrs,i)                                             
            if ename = null then call fix_name eaddr                            
             x_rc = test_address(eaddr)                                         
             if x_rc = 0 then                                                   
               "TBAdd xmitaddr"                                                 
               else do                                                          
                    zedsmsg = "Error"                                           
                    zedlmsg = "Invalid BCC address:" eaddr                      
                   "Setmsg Msg(isrz001)"                                        
                    call close_addr                                             
                    signal display                                              
                    end                                                         
            "TBAdd xmitaddr"                                                    
            end                                                                 
         call close_addr                                                        
                                                                                
        /* ----------------------------------------------------- *              
         * Test validity of from, receipt, reply-to addrs        *              
         * ----------------------------------------------------- */             
         if length(from) > 0 then do                                            
            x_rc = test_address(from)                                           
            if x_rc > 0 then do                                                 
               zedsmsg = "Error"                                                
               zedlmsg = "Invalid From address:" from                           
              "Setmsg Msg(isrz001)"                                             
               signal display                                                   
               end                                                              
           end                                                                  
         if length(receipt) > 0 then do                                         
            x_rc = test_address(receipt)                                        
            if x_rc > 0 then do                                                 
               zedsmsg = "Error"                                                
               zedlmsg = "Invalid Receipt address:" receipt                     
              "Setmsg Msg(isrz001)"                                             
               signal display                                                   
               end                                                              
           end                                                                  
         if length(replyto) > 0 then do                                         
            x_rc = test_address(replyto)                                        
            if x_rc > 0 then do                                                 
                zedsmsg = "Error"                                               
                zedlmsg = "Invalid ReplyTo address:" replyto                    
               "Setmsg Msg(isrz001)"                                            
                signal display                                                  
                end                                                             
           end                                                                  
                                                                                
        /* ----------------------------------------------------- *              
         * Now invoke the XMITIP application based on our input  *              
         * while trapping the output to view after execution.    *              
         * ----------------------------------------------------- */             
        Address TSO                                                             
        cmd.  = null                                                            
        xmit. = null                                                            
        if options = null then                                                  
           call outtrap "xmit."                                                 
        /* -------------------------- *                                         
         * Log the command            *                                         
         * -------------------------- */                                        
        n = 1                                                                   
        cmd.n = "Generated Command:"                                            
        n = n + 1                                                               
        if words(c_to) > 1 then do                                              
           call process_address c_to                                            
           if parens = 1 then signal display                                    
           c_to = "("c_to")"                                                    
           if t_names.1 <> null then                                            
              addr = '"'t_names.1'"' "<"word(t_addrs,1)">"                      
           else                                                                 
              addr = word(t_addrs,1)                                            
           if words(t_addrs) > 1 then                                           
              cmd.n = "%xmitip ("addr "+"                                       
           else                                                                 
              cmd.n = "%xmitip ("addr") +"                                      
           n = n + 1                                                            
           do co = 2 to words(t_addrs)                                          
              if t_names.co <> null then                                        
                 addr = '"'t_names.co'"' "<"word(t_addrs,co)">"                 
              else                                                              
                 addr = word(t_addrs,co)                                        
              if co = words(t_addrs)                                            
                 then addr = addr ")"                                           
              cmd.n = "        " addr "+"                                       
              n = n + 1                                                         
              end                                                               
              end                                                               
           else do                                                              
                cmd.n = "%xmitip" c_to "+"                                      
                n = n + 1                                                       
                end                                                             
                                                                                
        cmd.n = "       " c_msgds "+"                                           
        n = n + 1                                                               
        if words(c_cc) > 2 then do                                              
           parse value c_cc with x taddr                                        
           call process_address taddr                                           
           if parens = 1 then signal display                                    
           if t_names.1 <> null then                                            
                 addr = '"'t_names.1'"' "<"word(t_addrs,1)">"                   
              else                                                              
                 addr = word(t_addrs,1)                                         
           cmd.n = "        Cc (" addr "+"                                      
           n = n + 1                                                            
           do co = 2 to words(t_addrs)                                          
              if t_names.co <> null then                                        
                 addr = '"'t_names.co'"' "<"word(t_addrs,co)">"                 
              else                                                              
                 addr = word(t_addrs,co)                                        
              if co = words(t_addrs)                                            
                 then addr = addr ")"                                           
              cmd.n = "           " addr "+"                                    
              n = n + 1                                                         
              end                                                               
              end                                                               
           else do                                                              
               cmd.n = "       " c_cc "+"                                       
               n = n + 1                                                        
               end                                                              
        if length(c_cc) = 0                                                     
           then n = n - 1                                                       
        else do                                                                 
             nm1 = n - 1                                                        
             if pos("(",cmd.nm1) > 0 then                                       
                if pos(")",cmd.nm1) = 0 then do                                 
                   parse value cmd.nm1 with tad "+"                             
                   cmd.nm1 = tad ") +"                                          
                   end                                                          
             end                                                                
        if words(c_bcc) > 2 then do                                             
           cmd.n = "        Bcc" word(c_bcc,2) "+"                              
           n = n + 1                                                            
           do co = 3 to words(c_bcc)                                            
              cmd.n = "            " word(c_bcc,co) "+"                         
              n = n + 1                                                         
              end                                                               
              end                                                               
           else do                                                              
               cmd.n = "       " c_bcc "+"                                      
               n = n + 1                                                        
               end                                                              
        if length(c_bcc) = 0 then n = n - 1                                     
        cmd.n = c_from                                                          
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_replyto                                                       
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_addrfile                                                      
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_subject                                                       
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_receipt                                                       
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_sigds                                                         
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_import                                                        
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_sens                                                          
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_prior                                                         
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_mur                                                           
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_zipmethod                                                     
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_zippass                                                       
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_file                                                          
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_fileo                                                         
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_filename                                                      
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_filedesc                                                      
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_format                                                        
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        n = n + 1                                                               
        cmd.n = c_margin                                                        
          if strip(cmd.n) <> null then cmd.n = "       " cmd.n "+"              
                             else n = n - 1                                     
        /* now blank the last + */                                              
        cmd.n = left(cmd.n,length(cmd.n)-1)                                     
        n = n + 1                                                               
        cmd.n = " "                                                             
        cmd.0 = n                                                               
                                                                                
        if execmode = "Debug" then c_debug = "Debug"                            
                              else c_debug = null                               
                                                                                
        /* -------------------------- *                                         
         * Now issue the command      *                                         
         * -------------------------- */                                        
        cmd = ,                                                                 
        "%xmitip" c_to c_msgds c_cc c_bcc c_from c_subject c_file,              
                  c_fileo c_addrfile c_debug ,                                  
                  c_format c_margin c_sigds c_import c_sens c_mur,              
                  c_prior c_filedesc c_replyto c_receipt c_zippass ,            
                  c_filename c_zipmethod                                        
        Select                                                                  
          When options = "TEST" then do                                         
               say cmd                                                          
               call outtrap "off"                                               
               end                                                              
          When execmode = "Batch" then do                                       
               call outtrap "off"                                               
               call do_batch                                                    
                zedsmsg = "Complete"                                            
                zedlmsg = "Batch Process ended."                                
                Address ISPExec ,                                               
                    "Setmsg Msg(isrz001)"                                       
               return                                                           
               end                                                              
          Otherwise do                                                          
                    cmd                                                         
                    call outtrap "off"                                          
                    end                                                         
          end                                                                   
                                                                                
        xmit_dd = "C"random()                                                   
        "ALLOCATE FILE("xmit_dd") REUSE UNIT(SYSDA) SPACE(1 1) CYL",            
                 "DSORG(PS) RECFM(V B) LRECL(255)"                              
        "EXECIO * DISKW" xmit_dd "(STEM cmd. )"                                 
        "EXECIO * DISKW" xmit_dd "(STEM xmit. FINIS)"                           
        Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME("xmit_dd")"               
        Address ISPEXEC "BROWSE DATAID("dataid")"                               
        Address ISPEXEC "LMFREE DATAID("dataid")"                               
        "FREE FILE("xmit_dd")"                                                  
        Return                                                                  
                                                                                
        /* ----------------------------------------------------- *              
         * Build address table                                   *              
         * ----------------------------------------------------- */             
         Build_address_table:                                                   
         tb_open = 1                                                            
         tblname = "xmit"random(9999)                                           
         "TBCreate" tblname "keys(eaddru)" ,                                    
                  "names(zsel lact eaddr ename atype) Write"                    
         "TBSort" tblname "Fields(eaddru)"                                      
         "TBOpen xmitaddr Write Library(ISPPROF)"                               
          if rc = 8 then do                                                     
             call Create_Table                                                  
             end                                                                
          if rc = 12 then do                                                    
             "TBClose xmitaddr Library(ISPPROF)"                                
             "TBOpen xmitaddr Write Library(ISPPROF)"                           
             end                                                                
          "TBTop xmitaddr"                                                      
           lact = null                                                          
          "TBQuery xmitaddr rownum(rows)"                                       
          add_row = "Mult("rows")"                                              
          do rw = 1 to rows                                                     
             "TBSkip xmitaddr"                                                  
             "TBGet  xmitaddr"                                                  
             if ename = null then call fix_name eaddr                           
             eaddru = translate(eaddr)                                          
             "TBAdd" tblname "Order" add_row                                    
             add_row = null                                                     
             end                                                                
          "TBTop" tblname                                                       
          return                                                                
                                                                                
        /* ----------------------------------------------------- *              
         * Create the permanent address table                    *              
         * ----------------------------------------------------- */             
         Create_Table:                                                          
          "TBCreate xmitaddr keys(eaddru)",                                     
              "Names(ename eaddr atype) Library(ISPPROF) Replace"               
           return                                                               
                                                                                
        /* ----------------------------------------------------- *              
         * Save the address table                                *              
         * ----------------------------------------------------- */             
         Save_Addr_Table:                                                       
         call Create_Table                                                      
          "TBTop" tblname                                                       
          "TBQuery" tblname "rownum(rows)"                                      
          add_row = "Mult("rows")"                                              
          do rw = 1 to rows                                                     
            "TBSkip" tblname                                                    
            "TBGet" tblname                                                     
            "TBAdd xmitaddr" add_row                                            
            add_row = null                                                      
            end                                                                 
          "TBSave  xmitaddr Library(ISPPROF)"                                   
          "TBClose xmitaddr Library(ISPPROF)"                                   
          "TBEnd" tblname                                                       
          return                                                                
                                                                                
        /* ----------------------------------------------------- *              
         * Find sub-routine                                      *              
         * ----------------------------------------------------- */             
        Do_Find:                                                                
              parse value zcmd with o1 argument                                 
              upper argument                                                    
              argument = strip(argument)                                        
              hit  = 1                                                          
              crp  = ztdtop                                                     
              find_loop = ''                                                    
              search    = ''                                                    
              rowid     = crp                                                   
              if o1     = "RFIND" then do                                       
                 last_find = last_find + 1                                      
                 "TBTOP " tblname                                               
                 "TBSKIP" tblname "Position(ROWID) Number("Last_find")"         
                 end                                                            
                 else do                                                        
                      "TBSKIP" tblname "Position(ROWID)"                        
                      end                                                       
              if rc = 8 then do                                                 
                             "TBTop" tblname                                    
                             "TBSKIP" tblname "Position(ROWID)"                 
                             zedsmsg = "Wrapped"                                
                             end                                                
                        else zedsmsg = "Found"                                  
                                                                                
              /* perform search */                                              
                                                                                
              do forever                                                        
                 if att = 1 then                                                
                    search = translate(adsn afile aformat adesc)                
                 else                                                           
                     search = translate(ename eaddr)                            
                 if pos(argument,search) > 0 then do                            
                    crp = rowid + 0                                             
                    rowcrp = crp                                                
                    last_find = crp                                             
                    zedlmsg = argument "found during search in row:" crp        
                    "Setmsg msg(isrz001)"                                       
                    leave                                                       
                    end                                                         
                 "TBSKIP" tblname "POSITION(Rowid)"                             
                 if rc = 8 then do                                              
                       "TBTOP" tblname                                          
                        zedsmsg = "Wrapped"                                     
                    if find_loop = "on" then do                                 
                        zedsmsg = "Not Found"                                   
                        zedlmsg = argument "Not found during search"            
                        rowid = crp                                             
                        "Setmsg msg(isrz001)"                                   
                        leave                                                   
                        end                                                     
                        else find_loop = "on"                                   
                    end                                                         
                 end                                                            
         return                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * Insert Address routine                                *              
         * ----------------------------------------------------- */             
         Do_Insert:                                                             
             iexit = 0                                                          
             "control display save"                                             
             parse value "" with ename eaddr lact zcmd zsel ,                   
                            zedlmsg                                             
             do forever                                                         
                "Display panel(xmitipau)"                                       
                if rc > 3 then leave                                            
                if rc < 4 then do                                               
                   Select                                                       
                      when pos("(",ename) > 0 then                              
                           zedlmsg = "Invalid Name - no parenthesis",           
                                     "allowed."                                 
                      when pos(AtSign,eaddr) = 0 then                           
                           zedlmsg = "Invalid Address - no "AtSign" found."     
                      when pos(AtSign,eaddr) > 0 then do                        
                         pat = pos(AtSign,eaddr)                                
                         if pos(AtSign,eaddr,pat+1) > 0 then do                 
                            zedlmsg = "Too many "AtSign" in address"            
                            iexit = 2                                           
                            end                                                 
                         if iexit = 0 then do                                   
                            if ename = null then call fix_name eaddr            
                            x_rc = test_address(eaddr)                          
                            eaddru = translate(eaddr)                           
                            if x_rc = 0 then do                                 
                               "TBAdd" tblname "Order"                          
                                if rc = 8 then call dup_eaddr eaddr             
                                end                                             
                             else zedlmsg = "Invalid address:" eaddr            
                            iexit = 0                                           
                            end                                                 
                         end                                                    
                      otherwise nop                                             
                      end                                                       
                if length(zedlmsg) > 0 then do                                  
                   zedsmsg = "Error"                                            
                   "Setmsg msg(isrz001)"                                        
                   end                                                          
                if iexit = 1 then leave                                         
                end                                                             
             end                                                                
             "control display restore"                                          
             return                                                             
                                                                                
        /* ----------------------------------------------------- *              
         * Fixup the Name from the address                       */             
          Fix_Name: Procedure expose ename atsign                               
          parse arg waddr                                                       
        /*FEC 20010423: AtSign Support                                */        
          parse value waddr with wname (AtSign) .                               
          wname = translate(wname," ",".")                                      
          do i = 1 to words(wname)                                              
             tname = word(wname,i)                                              
             if length(tname) = 1 then                                          
                ename = ename translate(tname)                                  
             else do                                                            
                  parse value tname with first 2 rest                           
                  ename = ename translate(first)""rest                          
                  end                                                           
             end                                                                
          ename = strip(ename)                                                  
          return                                                                
                                                                                
        /* ----------------------------------------------------- *              
         * Issue duplicate address message                       *              
         * ----------------------------------------------------- */             
         dup_eaddr:                                                             
         parse arg addr                                                         
         zedsmsg = "Duplicate"                                                  
         zedlmsg = "Address:" addr "already exists in the table",               
                   "- not added.  Use Revise if you need to change",            
                   "the address or name information."                           
         "Setmsg msg(isrz001)"                                                  
         return                                                                 
                                                                                
        /* --------------------------------------------------------- *          
         * Test for GDG                                              *          
         * --------------------------------------------------------- */         
         test_gdg:                                                              
         parse arg file_dsn                                                     
         if pos("(",file_dsn) > 0 then do                                       
            parse value file_dsn with dsnx "("gdg")"                            
            if datatype(gdg) <> "NUM" then return                               
            file_dsn = allocgdg("*" file_dsn)                                   
            end                                                                 
            return                                                              
                                                                                
        /* ----------------------------------------------------- *              
         * Test file for existence                               *              
         * ----------------------------------------------------- */             
         test_file:                                                             
         parse arg file_dsn                                                     
         zedsmsg = null                                                         
         if left(file_dsn,1) = "*" then return                                  
         if pos("/",file_dsn) > 0 then do                                       
            Address TSO ,                                                       
              "BPXBATCH SH ls -l" file_dsn                                      
               bpxrc = rc / 256                                                 
            if bpxrc = 0 then return                                            
            d_rc = 0                                                            
            zedsmsg = "DSN Error"                                               
            zedlmsg = file_dsn "not found"                                      
           "Setmsg msg(isrz001)"                                                
            end                                                                 
         else                                                                   
         if sysdsn(file_dsn) <> "OK" then do                                    
            d_rc = 0                                                            
            zedsmsg = "DSN Error"                                               
            zedlmsg = file_dsn sysdsn(file_dsn)                                 
           "Setmsg msg(isrz001)"                                                
           end                                                                  
         else do                                                                
              call listdsi file_dsn                                             
              if sysdsorg = "PS" then return                                    
              if sysdsorg <> "PO" then do                                       
                 d_rc = 0                                                       
                 zedsmsg = "DSN Error"                                          
                 zedlmsg = file_dsn "is an invalid dataset" ,                   
                          "organization. DSORG="sysdsorg                        
                "Setmsg msg(isrz001)"                                           
                return                                                          
                end                                                             
              if pos("(",file_dsn) > 0 then return                              
              d_rc = 0                                                          
              zedsmsg = "DSN Error"                                             
              zedlmsg = file_dsn "is partitioned and requires" ,                
                        "member name."                                          
              "Setmsg msg(isrz001)"                                             
              end                                                               
        return                                                                  
                                                                                
        /* ----------------------------------------------------- *              
         * Do the e-mail address table cc / bcc                  *              
         * ----------------------------------------------------- */             
         do_address_table2:                                                     
         if addr_table = 1 then return                                          
         addr_table = 1                                                         
         call build_address_table                                               
         call do_address_table                                                  
         call save_addr_table                                                   
         return                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * Do the e-mail address table                           *              
         * ----------------------------------------------------- */             
         do_address_table:                                                      
            mult_sels = 0                                                       
            crp = 1                                                             
            rowcrp = 0                                                          
            src    = 0                                                          
            disp:                                                               
            do forever                                                          
               xmtrfind = "PASSTHRU"                                            
               "Vput xmtrfind"                                                  
               zcmd = null                                                      
               if mult_sels = 0 then do                                         
                 "TBTop" tblname                                                
                 "TBSkip" tblname "Number("crp")"                               
                    "TBDispl" tblname "Panel(xmitipat)" ,                       
                            "Csrrow("rowcrp") AutoSel(No)"                      
                 end                                                            
               else                                                             
                 "TBDispl" tblname                                              
               t_rc = rc                                                        
               mult_sels = ztdsels                                              
               xmtrfind = ''                                                    
               "vput xmtrfind"                                                  
               if t_rc > 7 then leave                                           
               up_ok = 0                                                        
               select                                                           
               when zcmd = "CANCEL" then do                                     
                    call save_addr_table                                        
                    signal display                                              
                    end                                                         
               when zcmd = "LOADAF" then do                                     
                    "AddPop"                                                    
                    "Display Panel(xmitipla)"                                   
                    s_rc = rc                                                   
                    "Rempop"                                                    
                    if s_rc > 0 then leave                                      
                    save_af = addrfile                                          
                    Call load_address_file                                      
                    ename = "Distribution List"                                 
                    eaddr = save_af                                             
                    eaddru = translate(eaddr)                                   
                    atype = "D"                                                 
                    lact  = "Load"                                              
                    "TBAdd" tblname "Order"                                     
                    if rc = 8 then                                              
                       "TBMod" tblname "Order"                                  
                    end                                                         
               when zcmd = "SAVEAF" then do                                     
                    "AddPop"                                                    
                    "Display Panel(xmitipas)"                                   
                    s_rc = rc                                                   
                    "Rempop"                                                    
                    if s_rc > 0 then leave                                      
                    addrfile = adfdsn                                           
                    call listdsi addrfile                                       
                    if sysreason+0 = 0 then                                     
                       if addrdisp = "NEW" then do                              
                          zedsmsg = "Error"                                     
                          zedlmsg = addrfile "already exists",                  
                                    "Disposition of New invalid."               
                          "Setmsg msg(isrz001)"                                 
                          signal do_address_table                               
                          end                                                   
                    if sysreason+0 > 0 then do                                  
                       if addrdisp = "NEW" then do                              
                          Address TSO                                           
                          if pos("(",addrfile) > 0 then                         
                             "Alloc f(addralx) ds("addrfile")",                 
                             "New spa(15,15) tr dir(12)",                       
                             "Recfm(v b) lrecl(132) blksize(26400)"             
                          else                                                  
                             "Alloc f(addralx) ds("addrfile")",                 
                             "New spa(15,15) tr ",                              
                             "Recfm(v b) lrecl(132) blksize(26400)"             
                          "Free f(addralx)"                                     
                          Address ISPExec                                       
                          end                                                   
                       else do                                                  
                            zedsmsg = "Invalid DSN"                             
                            zedlmsg = addrfile SYSMSGLVL1,                      
                                      SYSMSGLVL2                                
                            "Setmsg msg(isrz001)"                               
                            end                                                 
                       end                                                      
                   save_crp = ztdtop                                            
                   "TBTop" tblname                                              
                   sc = 2                                                       
                   saddr.1 = "* AddressFile created on",                        
                             date() "at" time() "by" sysvar("sysuid")           
                   saddr.2 = "* "                                               
                   do forever                                                   
                      "TBSkip" tblname                                          
                      if rc > 0 then leave                                      
                      "TBGet" tblname                                           
                      if lact = null then iterate                               
                      if lact = "Load" then iterate                             
                      if lact = "Save" then iterate                             
                      sc = sc + 1                                               
                      lact = strip(lact)                                        
                      saddr.sc = left(lact,5) '"'ename'" <'eaddr'>'             
                      lact = null                                               
                      "TBMod" tblname                                           
                      end                                                       
                   if sc = 0 then do                                            
                      zedsmsg = "Error"                                         
                      zedlmsg = "No addresses selected so",                     
                                "there is nothing to save."                     
                      "Setmsg msg(isrz001)"                                     
                      end                                                       
                   else do                                                      
                     Address TSO                                                
                     "Alloc F(sc"sc") shr Ds("addrfile")"                       
                     "Execio * diskw sc"sc "(finis stem saddr."                 
                     "Free  F(sc"sc")"                                          
                     Address ISPExec                                            
                     ename = adfdesc                                            
                     if ename = null then                                       
                        ename = "Distribution List"                             
                     eaddr = adfdsn                                             
                     eaddru = translate(eaddr)                                  
                     atype = "D"                                                
                     lact  = "Save"                                             
                     "TBAdd" tblname "Order"                                    
                     if rc = 8 then                                             
                        "TBMod" tblname "Order"                                 
                     "Vput (addrfile) Profile"                                  
                     if to = "?" then c_to = "*"                                
                     zedsmsg = "Completed"                                      
                     zedlmsg = "AddressFile created in" ,                       
                               addrfile "and defined for this",                 
                               "e-mail."                                        
                     "Setmsg msg(isrz001)"                                      
                    end                                                         
                    end                                                         
               When words(zcmd) > 1 then do                                     
                    parse value zcmd with o1 o2                                 
                    zsel = null                                                 
                    if abbrev("FIND",o1,1) = 1 then call do_find                
                    end                                                         
               when zcmd = "LOOKUP" then                                        
                    if ldap <> 1 then do                                        
                       "AddPop"                                                 
                       Address TSO,                                             
                           "%xmitipml  /"tblname                                
                       "RemPop"                                                 
                       end                                                      
               When zcmd = "RFIND" then do                                      
                    zcmd = "RFIND" o2                                           
                    zsel = null                                                 
                    call  do_find                                               
                    end                                                         
               When abbrev("INSERT",zcmd,1) = 1 then call do_insert             
               When zsel = "L" then do                                          
                    if atype <> "D" then do                                     
                       zedlmsg = "The requested entry is not an",               
                                 "address list."                                
                       zedsmsg = "Error"                                        
                       "Setmsg msg(isrz001)"                                    
                       end                                                      
                    else do                                                     
                         addrfile = eaddr                                       
                         save_af = addrfile                                     
                         save_ad = ename                                        
                         Call load_address_file                                 
                         ename = save_ad                                        
                         eaddr = save_af                                        
                         eaddru = translate(eaddr)                              
                         lact = "Load"                                          
                         atype = "D"                                            
                         zsel = null                                            
                         "TBMod" tblname "Order"                                
                         end                                                    
                    end                                                         
               When zsel = "S" then                                             
                    if atype = "D" then do                                      
                       addrfile = eaddr                                         
                       lact = "Select"                                          
                       zsel = null                                              
                       "TBPut" tblname                                          
                       if to = "?" then c_to = "*"                              
                       end                                                      
                    else                                                        
                    if lact <> "To" then do                                     
                       call clean_addr                                          
                       if ename <> null then                                    
                          c_to = strip(c_to '"'ename'" <'eaddr'>')              
                       else                                                     
                          c_to = strip(c_to eaddr)                              
                       lact = "To"                                              
                       zsel = null                                              
                       "TBPut" tblname                                          
                       end                                                      
               When zsel = "B" then do                                          
                    call test_atype                                             
                    if at = 1 then do                                           
                       "Control Display Save"                                   
                       "Browse Dataset("eaddr")"                                
                       "Control Display Restore"                                
                       lact = "Browse"                                          
                       zsel = null                                              
                       "TBPut" tblname                                          
                       end                                                      
                    else                                                        
                       if lact <> "Bcc" then do                                 
                          call clean_addr                                       
                          c_bcc = strip(c_bcc eaddr)                            
                          lact = "Bcc"                                          
                          zsel = null                                           
                          "TBPut" tblname                                       
                          end                                                   
                       end                                                      
               When zsel = "E" then do                                          
                    call test_atype                                             
                    if at = 1 then do                                           
                       "Control Display Save"                                   
                       "Edit Dataset("eaddr")"                                  
                       e_rc = rc                                                
                       "Control Display Restore"                                
                       if e_rc = 0 then do                                      
                          zedlmsg = "AddressFile" eaddr "Edited",               
                                    "suggest you do a Load to update",          
                                    "this table."                               
                          zedsmsg = null                                        
                          "Setmsg msg(isrz001)"                                 
                       end                                                      
                       lact = "Edit"                                            
                       zsel = null                                              
                       "TBPut" tblname                                          
                       end                                                      
                       end                                                      
               When zsel = "U" then                                             
                    if atype = null then do                                     
                    call clean_addr                                             
                    lact = null                                                 
                    zsel = null                                                 
                    "TBPut" tblname                                             
                    end                                                         
               When zsel = "C" then                                             
                    if atype = null then                                        
                    if lact <> "Cc" then do                                     
                       call clean_addr                                          
                       if ename <> null then                                    
                          c_cc = strip(c_cc '"'ename'" <'eaddr'>')              
                       else                                                     
                          c_cc = strip(c_cc eaddr)                              
                       lact = "Cc"                                              
                       zsel = null                                              
                       "TBPut" tblname                                          
                       end                                                      
               When zsel = "D" then do                                          
                     call clean_addr                                            
                    "TBDelete" tblname                                          
                    end                                                         
               When zsel = "R" then do                                          
say "atype: *"atype"*"                                                          
                    call test_atype                                             
                    if at = 1 then do                                           
                       "control display save"                                   
                       zsel = null                                              
                       lact = "Revise"                                          
                       "TBGet" tblname "Position(rcrp)"                         
                       adfdsn  = eaddr                                          
                       adfdesc = ename                                          
                       "Display panel(xmitipar)"                                
                       up_ok = rc                                               
                       "control display restore"                                
                       eaddr  = adfdsn                                          
                       eaddru = translate(eaddr)                                
                       ename   = adfdesc                                        
                       lact    = "Revise"                                       
                       atype   = "D"                                            
                       if rc = 0 then                                           
                         "TBMod" tblname "Order"                                
                       end                                                      
                    if at = 0 then do                                           
                       call clean_addr                                          
                       "control display save"                                   
                       zsel = null                                              
                       lact = "Revise"                                          
                       "TBGet" tblname "Position(rcrp)"                         
                       s_addr = eaddr                                           
                       "Display panel(xmitipau)"                                
                       if rc < 4 then do                                        
                          if s_addr <> eaddr then do                            
                             n_eaddr = eaddr                                    
                             n_ename = ename                                    
                             "TBTop" tblname                                    
                             "TBSkip" tblname "Number("rcrp")"                  
                             "TBDelete" tblname                                 
                             eaddr = n_eaddr                                    
                             ename = n_ename                                    
                             end                                                
                         if pos(AtSign,eaddr) = 0 then do                       
                             up_ok = 1                                          
                            zedlmsg = "Invalid address - no" AtSign             
                             zedsmsg = "Error"                                  
                             end                                                
                          if pos("(",ename) > 0 then do                         
                             up_ok = 1                                          
                             zedlmsg = "Invalid name - ( found"                 
                             zedsmsg = "Error"                                  
                             end                                                
                          if pos(")",ename) > 0 then do                         
                             up_ok = 1                                          
                             zedlmsg = "Invalid name - ) found"                 
                             zedsmsg = "Error"                                  
                             end                                                
                          end                                                   
                       "control display restore"                                
                       eaddru = translate(eaddr)                                
                       if up_ok = 0 then                                        
                          "TBMod" tblname "Order"                               
                       else                                                     
                          "Setmsg msg(isrz001)"                                 
                       end                                                      
                    end                                                         
               When zsel = "I" then                                             
                    if atype = null then                                        
                       call do_insert                                           
               Otherwise do                                                     
                         m_type = null                                          
                         if zsel <> null then                                   
                            m_type = "Invalid Selection" zsel                   
                         if zcmd <> null then                                   
                            m_type =  "Invalid Command" zcmd                    
                         zedsmsg = "Error"                                      
                         zedlmsg = "An" m_type "was entered."                   
                         if m_type <> null then                                 
                            "Setmsg Msg(isrz001)"                               
                         end                                                    
             end                                                                
            end                                                                 
            return                                                              
                                                                                
        /* ----------------------------------------------------- *              
         * Clean up possible duplicate address                   *              
         * ----------------------------------------------------- */             
         Clean_Addr:                                                            
         if lact = null then return                                             
         Select                                                                 
           When lact = "To" then do                                             
                call clean_addr_string c_to                                     
                c_to = string                                                   
                end                                                             
           When lact = "Cc" then do                                             
                call clean_addr_string c_cc                                     
                c_cc = string                                                   
                end                                                             
           When lact = "Bcc" then do                                            
                call clean_addr_string c_bcc                                    
                c_bcc = string                                                  
                end                                                             
           otherwise nop                                                        
           end                                                                  
           return                                                               
                                                                                
        /* ----------------------------------------------------- *              
         * Eliminate duplicate address                           *              
         * ----------------------------------------------------- */             
         Clean_Addr_String:                                                     
         parse arg string                                                       
         if length(string) = 0 then return                                      
         if ename = null then do                                                
            p1 = wordpos(eaddr,string)                                          
            string = delword(string,p1,1)                                       
            end                                                                 
         else do                                                                
              saddr = "<"eaddr">"                                               
              p1 = wordpos(saddr,string)                                        
              if p1 > 0 then do                                                 
                 string = delword(string,p1,1)                                  
                 pw = words(ename)                                              
                 p1 = p1 - pw                                                   
                 string = delword(string,p1,pw)                                 
                 end                                                            
              end                                                               
         return                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * Do the Attachment Table                               *              
         * ----------------------------------------------------- */             
         do_attachment_table:                                                   
         att = 1                                                                
         att_sel = 0                                                            
         tblname = "XMITFILE"                                                   
         "TBOpen" tblname "Write Library(ISPProf)"                              
         if rc = 0 then do                                                      
            "TBQuery" tblname "Names(names) Rownum(rows)"                       
            parse value names with "(" names ")"                                
            if wordpos("AFORMAT",names) = 0 then do                             
               oldtbl = tblname                                                 
               tblname = "XMITFNEW"                                             
               call build_attachment_table                                      
               "TBTop" oldtbl                                                   
               "TBDelete" tblname                                               
               do i = 1 to rows                                                 
                  "TBSkip" oldtbl                                               
                  if pos("/",adesc) > 0 then                                    
                     parse value adesc with afile "/" adesc                     
                  "TBadd" tblname                                               
                  end                                                           
               "TBend" oldtbl                                                   
               "TBSave" tblname "Library(ISPProf) Name(XMITFILE)"               
               "TBEND" tblname                                                  
               tblname = "XMITFILE"                                             
               "TBOpen" tblname "Write Library(ISPProf)"                        
               zedsmsg = null                                                   
               zedlmsg = "Info: Your File attachment table ",                   
                         "has been converted to the new format.",               
                         "Some old information may have been lost",             
                         "in the conversion."                                   
               "setmsg msg(isrz001)"                                            
            end                                                                 
            if wordpos("ACT",names) = 0 then do                                 
               oldtbl = tblname                                                 
               tblname = "XMITFNEW"                                             
               call build_attachment_table                                      
               "TBTop" oldtbl                                                   
               do i = 1 to rows                                                 
                  "TBSkip" oldtbl                                               
                  "TBadd" tblname                                               
                  end                                                           
               "TBend" oldtbl                                                   
               "TBSave" tblname "Library(ISPProf) Name(XMITFILE)"               
               "TBEND" tblname                                                  
               tblname = "XMITFILE"                                             
               "TBOpen" tblname "Write Library(ISPProf)"                        
               zedsmsg = null                                                   
               zedlmsg = "Info: Your File attachment table ",                   
                         "has been converted to the new format.",               
                         "Some old information may have been lost",             
                         "in the conversion."                                   
               "setmsg msg(isrz001)"                                            
            end                                                                 
         end                                                                    
         if rc = 8 then call build_attachment_table                             
            mult_sels = 0                                                       
            crp = 1                                                             
            rowcrp = 1                                                          
            src    = 0                                                          
            disp:                                                               
            do forever                                                          
               xmtrfind = "PASSTHRU"                                            
               zsel = null                                                      
               "Vput xmtrfind"                                                  
               if mult_sels = 0 then do                                         
                 "TBTop" tblname                                                
                 "TBSkip" tblname "Number("crp")"                               
                 if adsn <> null then csr = "zsel"                              
                                 else csr = "adsn"                              
                 if rowcrp = 0 then                                             
                    "TBDispl" tblname "Panel(xmitipfi)",                        
                       "Position(rowcrp)"                                       
                 else                                                           
                    "TBDispl" tblname "Panel(xmitipfi)" ,                       
                            "Cursor("csr") AutoSel(No)" ,                       
                            "Position(rowcrp)"                                  
                 end                                                            
               else                                                             
                 "TBDispl" tblname "csrrow("rowcrp")" ,                         
                           "Position(rowcrp) cursor(adsn)"                      
               t_rc = rc                                                        
               mult_sels = ztdsels                                              
               xmtrfind = ''                                                    
               "vput xmtrfind"                                                  
               if t_rc > 7 & att_sel > 0 then leave                             
               if t_rc > 7 then                                                 
                  if att_sel = 0 then do                                        
                     zedsmsg = null                                             
                     zedlmsg = "Error: No files were selected for ",            
                               "attachment.  Select at least one file",         
                               "ok use the Cancel command."                     
                     "setmsg msg(isrz001)"                                      
                     zcmd = null                                                
                     end                                                        
               select                                                           
               when zcmd = "CANCEL" then do                                     
                    "TBEnd" tblname                                             
                    signal display                                              
                    end                                                         
               when zcmd = "CLEAR" then do                                      
                    "TBEnd" tblname                                             
                    "TBErase" tblname "Library(ISPProf)"                        
                    call build_attachment_table                                 
                    zcmd = null                                                 
                    mult_sels = 0                                               
                    crp = 1                                                     
                    rowcrp = 1                                                  
                    src    = 0                                                  
                    end                                                         
               When words(zcmd) > 1 then do                                     
                    parse value zcmd with o1 o2                                 
                    if abbrev("FIND",o1,1) = 1 then call do_find                
                    end                                                         
               When abbrev("INSERT",zcmd,1) = 1 then do                         
                    "TBbottom" tblname                                          
                    "TBVClear" tblname                                          
                    "TBadd" tblname                                             
                    "TBQuery" tblname "rownum(rowcrp)"                          
                    crp = rowcrp                                                
                    end                                                         
               When zcmd = "RFIND" then do                                      
                    zcmd = "RFIND" o2                                           
                    call  do_find                                               
                    end                                                         
               When zsel = "I" then do                                          
                    zsel = null                                                 
                    act  = null                                                 
                    "TBadd" tblname                                             
                    rowcrp = rowcrp + 1                                         
                    crp    = rowcrp                                             
                    end                                                         
               When zsel = "S" then do                                          
                    zsel = null                                                 
                    call test_gdg  adsn                                         
                    if file_dsn = adsn then                                     
                       call test_file adsn                                      
                    act  = "Y"                                                  
                    att_sel = att_sel + 1                                       
                    if left(aformat,1) = "?" then do                            
                       "Control Display Save"                                   
                       call fix_format aformat                                  
                       "Control Display Restore"                                
                       if new_format <> null then                               
                          aformat = new_format                                  
                       end                                                      
                     if aformat <> null then                                    
                        call test_format aformat                                
                     if erc > 0 then do                                         
                        act = null                                              
                        att_sel = att_sel - 1                                   
                        end                                                     
                     "TBPut" tblname                                            
                    end                                                         
               When zsel = "U" then do                                          
                    zsel = null                                                 
                    act  = null                                                 
                    att_sel = att_sel - 1                                       
                    "TBPut" tblname                                             
                    end                                                         
               When zsel = "D" then do                                          
                    zsel = null                                                 
                    if act <> null then                                         
                       att_sel = att_sel - 1                                    
                    "TBDelete" tblname                                          
                    end                                                         
               When zsel = null then do                                         
                    if left(aformat,1) = "?" then do                            
                       "Control Display Save"                                   
                       call fix_format aformat                                  
                       "Control Display Restore"                                
                       if new_format <> null then                               
                          aformat = new_format                                  
                       end                                                      
                    if words(adesc) > 1 then do                                 
                       zedsmsg = "Information"                                  
                       zedlmsg = "Description contains more than" ,             
                                 "1 word. Dashes (-) inserted."                 
                       "Setmsg msg(isrz001)"                                    
                       adesc = translate(adesc,"-"," ")                         
                       end                                                      
                     if aformat <> null then                                    
                        call test_format aformat                                
                     if erc > 0 then do                                         
                        act = null                                              
                        att_sel = att_sel - 1                                   
                        end                                                     
                     "TBPut" tblname                                            
                    end                                                         
               Otherwise do                                                     
                         if zsel <> null then                                   
                            m_type = "Invalid Selection" zsel                   
                         if zcmd <> null then                                   
                            m_type =  "Invalid Command" zcmd                    
                         zedsmsg = "Error"                                      
                         zedlmsg = "An" m_type "was entered."                   
                         "Setmsg Msg(isrz001)"                                  
                         end                                                    
               end                                                              
            end                                                                 
            att = 0                                                             
            return                                                              
                                                                                
          /* ----------------------------------------------------- *            
           * Build the file attachment table                       *            
           * ----------------------------------------------------- */           
           build_attachment_table:                                              
            "TBCreate" tblname ,                                                
                      "names(act adsn afile aformat aleft aright",              
                            "atop abottom adesc) replace"                       
            "TBSort"   tblname "Fields(adsn)"                                   
            "TBVClear" tblname                                                  
            "TBadd"    tblname                                                  
            return                                                              
                                                                                
        /* ----------------------------------------------------- *              
         * Process Address                                       *              
         * ----------------------------------------------------- */             
        Process_Address: Procedure Expose t_names. t_addrs parens ,             
                                   atsign                                       
        parse arg address                                                       
        /* ----------------------------------------------------- *              
         * Remove any wrapping parens                            */             
         if left(address,1) = "(" then do                                       
            parse value address with "(" address                                
            if right(address,1) = ")" then                                      
               parse value address with address ")"                             
            end                                                                 
         address = strip(address)                                               
                                                                                
        /* ----------------------------------------------------- *              
         * Test for parenthesis                                  */             
          parens = 0                                                            
          if pos("(",address) > 1 then parens = 1                               
          if pos(")",address) > 1 then parens = 1                               
          if parens = 1 then do                                                 
             zedsmsg = "Error"                                                  
             zedlmsg = "Invalid Address - includes '(' or ')' :" ,              
                        address                                                 
             Address ISPExec,                                                   
                     "Setmsg msg(isrz001)"                                      
             return                                                             
             end                                                                
                                                                                
        /* ----------------------------------------------------- *              
         * set up our variables                                  */             
         t_addrs = ""                                                           
         t_names. = ""                                                          
         t_names.0 = 0                                                          
         tn = 0                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * Now process thru the provided address                 *              
         * ----------------------------------------------------- */             
        do until length(address) = 0                                            
              Select                                                            
                /* -------------------------------------------------- *         
                 * No name just an address in <>                      *         
                 * e.g. <first.last@address>                          */        
                when left(address,1) = '<' then do                              
                     tn = tn + 1                                                
                     parse value address with "<" addr ">" address              
                     t_addrs = t_addrs addr                                     
                     address = strip(address)                                   
                     end                                                        
                /* -------------------------------------------------- *         
                 * double quotes                                      *         
                 * e.g. "first last" <first.last@address>             */        
                when left(address,1) = '"' then do                              
                     right = pos(">",address)                                   
                     if right = 0 then                                          
                        if pos("<",address) > 1                                 
                          then do                                               
                               address = address">"                             
                               right = pos(">",address)                         
                               end                                              
                          else right = length(address)                          
                     data = left(address,right)                                 
                     x = length(address)                                        
                     address = substr(address,right+1)                          
                     address = strip(address)                                   
                     tn = tn + 1                                                
                     parse value data with '"' t_names.tn '"' .                 
                     parse value data with . "<" addr ">" .                     
                     t_addrs = t_addrs addr                                     
                     end                                                        
                /* -------------------------------------------------- *         
                 * single quotes                                      *         
                 * e.g. 'first last' <first.last@address>             */        
                when left(address,1) = "'" then do                              
                     right = pos(">",address)                                   
                     if right = 0 then                                          
                        if pos("<",address) > 1                                 
                          then do                                               
                               address = address">"                             
                               right = pos(">",address)                         
                               end                                              
                          else right = length(address)                          
                     data = left(address,right)                                 
                     address = substr(address,right+1)                          
                     address = strip(address)                                   
                     tn = tn + 1                                                
                     parse value data with "'" t_names.tn "'" .                 
                     parse value data with . "<" addr ">" .                     
                     t_addrs = t_addrs addr                                     
                     end                                                        
                /* -------------------------------------------------- *         
                 * Only 1 word so must be an address                  */        
                when words(address) = 1 then do                                 
                     tn = tn + 1                                                
                     t_addrs = t_addrs address                                  
                     address = ""                                               
                     end                                                        
                /* -------------------------------------------------- *         
                 * Only 1 word so must be an address                  */        
                when pos(">",address) = 0 then do                               
                     tn = tn + 1                                                
                     t_addrs = t_addrs address                                  
                     address = ""                                               
                     end                                                        
                /* -------------------------------------------------- *         
                 * Test for address without 'name'                    */        
                when pos(AtSign,word(address,1)) > 0 then do                    
                     tn = tn + 1                                                
                     t_addrs = t_addrs word(address,1)                          
                     parse value address with x address                         
                     end                                                        
                /* -------------------------------------------------- *         
                 * otherwise assume name with no quotes               *         
                 * e.g. first last <first.last@address>               */        
                otherwise do                                                    
                     right = pos(">",address)                                   
                     data = left(address,right)                                 
                     address = substr(address,right+1)                          
                     address = strip(address)                                   
                     tn = tn + 1                                                
                     parse value data with t_names.tn "<" .                     
                     parse value data with . "<" addr ">" .                     
                     t_addrs = t_addrs addr                                     
                     end                                                        
                end                                                             
              end                                                               
              t_names.0 = tn                                                    
              return                                                            
                                                                                
        /* --------------------------------------------------------- *          
         * Process Selected Attachments                              *          
         * Option 1: normal     Option 2: hfs files                  *          
         * --------------------------------------------------------- */         
        Get_Attachments:                                                        
         arg gaopt                                                              
         "TBTop" tblname                                                        
         do forever                                                             
          skip = 0                                                              
           "TBskip" tblname                                                     
           if rc > 7 then leave                                                 
           if act = null then iterate                                           
           if adsn = null then do                                               
              skip = 1                                                          
              "TBDelete" tblname                                                
              end                                                               
           if skip = 1 then iterate                                             
           if gaopt = 1 then if pos("/",adsn) > 0 then iterate                  
           if gaopt = 2 then if pos("/",adsn) = 0 then iterate                  
           if pos("/",adsn) > 0 then                                            
              c_fileo = c_fileo adsn                                            
           else c_file = c_file adsn                                            
           act = null                                                           
           "TBPUT" tblname                                                      
           form_over = 1                                                        
           if afile <> null                                                     
              then c_filename = strip(c_filename) afile                         
              else c_filename = strip(c_filename) "x"                           
           if adesc <> null                                                     
              then c_filedesc = strip(c_filedesc) adesc                         
              else c_filedesc = strip(c_filedesc) "x"                           
           if aformat <> null                                                   
              then c_format = strip(c_format) aformat                           
              else c_format = strip(c_format) "x"                               
           if strip(aleft""aright""atop""abottom) <> null                       
              then c_margin = strip(c_margin) ,                                 
                   aleft"/"aright"/"atop"/"abottom                              
              else c_margin = strip(c_margin) "/"                               
         end                                                                    
         return                                                                 
                                                                                
        /* ----------------------------------------------------- *              
         * FORMAT statement Prompt Routine                       *              
         * ----------------------------------------------------- */             
         Fix_Format:                                                            
         parse arg fixfmt                                                       
          Parse value "" with ft tsuf fb bsuf fh hcolor hsuf,                   
                              fr rlayout rfont rpaper rsuf ,                    
                              fz znia fbz bznia fhz hznia  ,                    
                              frz rznia zlayout zfont zpaper ,                  
                              fp playout pfont plpi ppaper ,                    
                              fpz pznia pzlayout pzfont pzlpi pzpaper ,         
                              new_format hfsize                                 
          fixfmt = substr(fixfmt,2)                                             
          "AddPop"                                                              
          if fixfmt <> null then do                                             
             parse value fixfmt with fmt1 "/" fmt2 "/" fmt3 "/" ,               
                                     fmt4 "/" fmt5 "/" fmt6                     
             fmt1l = strip(fmt1)                                                
             fmt1 = Translate(fmt1l)                                            
             fmt2 = strip(fmt2)                                                 
             fmt3 = strip(fmt3)                                                 
             fmt4 = strip(fmt4)                                                 
             fmt5 = strip(fmt5)                                                 
             fmt6 = strip(fmt6)                                                 
             Select                                                             
               When fmt1 = "BIN" then                                           
                    bznia = fmt2                                                
               When left(fmt1,3) = "HTM" then do                                
                    hcolor = fmt2                                               
                    hsuf   = fmt3                                               
                    hfsize = fmt4                                               
                    end                                                         
               When fmt1 = "PDF" then do                                        
                    playout = fmt2                                              
                    pfont   = fmt3                                              
                    ppaper  = fmt4                                              
                    plpi    = fmt5                                              
                    end                                                         
               When fmt1 = "RTF" then do                                        
                    rlayout = fmt2                                              
                    rfont   = fmt3                                              
                    rpaper  = fmt4                                              
                    rsuf    = fmt5                                              
                    end                                                         
               When fmt1 = "ZIP" then                                           
                    znia = fmt2                                                 
               When fmt1 = "ZIPBIN" then                                        
                    bznia = fmt2                                                
               When fmt1 = "ZIPHTML" then do                                    
                    hznia   = fmt2                                              
                    hcolor  = fmt3                                              
                    hfsize  = fmt4                                              
                    end                                                         
               When fmt1 = "ZIPPDF" then do                                     
                    pznia    = fmt2                                             
                    pzlayout = fmt3                                             
                    pzfont   = fmt4                                             
                    pzpaper  = fmt5                                             
                    pzlpi    = fmt6                                             
                    end                                                         
               When fmt1 = "ZIPRTF" then do                                     
                    rznia  = fmt2                                               
                    zlayout = fmt3                                              
                    zfont   = fmt4                                              
                    zpaper  = fmt5                                              
                    end                                                         
               Otherwise tsuf = fmt1l                                           
               End                                                              
            End                                                                 
          do forever                                                            
             "Display Panel(xmitipfp)"                                          
             if rc > 3 then leave                                               
                                                                                
             if length(fh) > 0 then do                                          
                "Display Panel(xmitipf1)"                                       
                if rc > 3 then leave                                            
                end                                                             
                                                                                
             if length(fp) > 0 then do                                          
                "Display Panel(xmitipf2)"                                       
                if rc > 3 then leave                                            
                if pfont = null then pfont = 9                                  
                if datatype(pfont) <> "NUM" then do                             
                   zedsmsg = ""                                                 
                   zedlmsg = "Invalid Font Size Specified."                     
                   "Setmsg msg(isrz001)"                                        
                   fp = null                                                    
                   end                                                          
                end                                                             
                                                                                
             if length(fr) > 0 then do                                          
                "Display Panel(xmitipf3)"                                       
                if rc > 3 then leave                                            
                if rfont = null then rfont = 9                                  
                if datatype(rfont) <> "NUM" then do                             
                   zedsmsg = ""                                                 
                   zedlmsg = "Invalid Font Size Specified."                     
                   "Setmsg msg(isrz001)"                                        
                   fr = null                                                    
                   end                                                          
                end                                                             
                                                                                
             if length(fz) > 0 then do                                          
                "Display Panel(xmitipf4)"                                       
                if rc > 3 then leave                                            
                end                                                             
                                                                                
             if length(fbz) > 0 then do                                         
                "Display Panel(xmitipf5)"                                       
                if rc > 3 then leave                                            
                end                                                             
                                                                                
             if length(fhz) > 0 then do                                         
                "Display Panel(xmitipf6)"                                       
                if rc > 3 then leave                                            
                end                                                             
                                                                                
             if length(fpz) > 0 then do                                         
                "Display Panel(xmitipf7)"                                       
                if rc > 3 then leave                                            
                if pzfont = null then pzfont = 9                                
                if datatype(pzfont) <> "NUM" then do                            
                   zedsmsg = ""                                                 
                   zedlmsg = "Invalid Font Size Specified."                     
                   "Setmsg msg(isrz001)"                                        
                   fpz = null                                                   
                   end                                                          
                end                                                             
                                                                                
             if length(frz) > 0 then do                                         
                "Display Panel(xmitipf8)"                                       
                if rc > 3 then leave                                            
                if zfont = null then zfont = 9                                  
                if datatype(zfont) <> "NUM" then do                             
                   zedsmsg = ""                                                 
                   zedlmsg = "Invalid Font Size Specified."                     
                   "Setmsg msg(isrz001)"                                        
                   frz = null                                                   
                   end                                                          
                end                                                             
                                                                                
             t = strip(ft""fb""fh""fr""fz""fbz""fhz""frz""fp""fpz)              
             if length(t) > 0                                                   
                then leave                                                      
             end                                                                
                                                                                
          Select                                                                
            When ft <> null then                                                
                 nfmt = "TXT"                                                   
            When fb <> null then                                                
                 nfmt = "BIN"                                                   
            When fh <> null then                                                
                 nfmt = "HTML/"hcolor"/html/"hfsize                             
            When fp <> null then                                                
                 nfmt = "PDF/"playout"/"pfont"/"ppaper"/"plpi                   
            When fr <> null then                                                
                 nfmt = "RTF/"rlayout"/"rfont"/"rpaper                          
            When fz <> null then                                                
                 nfmt = "ZIP/"znia                                              
            When fbz <> null then                                               
                 nfmt = "ZIPBIN/"bznia                                          
            When fhz <> null then                                               
                 nfmt = "ZIPHTML/"hznia"/"hcolor"/"hfsize                       
            When fpz <> null then do                                            
                 nfmt = "ZIPPDF/"pznia                                          
                 nfmt = nfmt"/"pzlayout"/"pzfont"/"pzpaper"/"pzlpi              
                 end                                                            
            When frz <> null then                                               
                 nfmt = "ZIPRTF/"rznia"/"zlayout"/"zfont"/"zpaper               
            otherwise nfmt = null                                               
            end                                                                 
            new_format = nfmt                                                   
            "RemPop"                                                            
          return                                                                
                                                                                
        /* ---------------------------------------------------------- *         
         * Test Address routine.                                      *         
         * If ldap is not 1 or 3 then perform a test of the e-mail    *         
         * address against the provided ldap server using the xmitipid*         
         * routine.                                                   *         
         *                                                            *         
         * If the routine returns 0 the address is ok                 *         
         *                        4 the address is no good            *         
         *                        8 the ldap server is not there      *         
         * ---------------------------------------------------------- */        
         Test_Address: Procedure Expose ldap                                    
         if ldap = 1 then return 0                                              
         if ldap = 3 then return 0                                              
         arg address                                                            
         if pos("<",address) > 0 then                                           
            parse value address with . "<" address ">" .                        
         Address TSO "%xmitipid" address                                        
         x_rc = rc                                                              
         if x_rc = 0 then return 0                                              
         if x_rc = 4 then return 4                                              
         if x_rc = 8 then ldap = 1                                              
            return 8                                                            
                                                                                
        /* --------------------------------------------------------- *          
         * Process Load AddressFile Request                          *          
         * --------------------------------------------------------- */         
         Load_Address_File:                                                     
          call listdsi addrfile                                                 
          if sysreason+0 > 0 then do                                            
             zedsmsg = "Invalid DSN"                                            
             zedlmsg = addrfile SYSMSGLVL1,                                     
                       SYSMSGLVL2                                               
             "Setmsg msg(isrz001)"                                              
             end                                                                
          else do                                                               
               Address TSO                                                      
               "Alloc F(addralx) shr Ds("addrfile")"                            
               "Execio * diskr addralx (finis stem saddr."                      
               "Free  F(addralx)"                                               
               Address ISPExec                                                  
               added = 0                                                        
               ltot  = 0                                                        
               do sc = 1 to saddr.0                                             
                  if left(saddr.sc,1) = "*" then iterate                        
                  ename = null                                                  
                  if pos("<",saddr.sc) > 0 then do                              
                     if pos('"',saddr.sc) > 0 then                              
                        parse value saddr.sc with ,                             
                           lact '"'ename'"' "<"eaddr">" .                       
                     if pos("'",saddr.sc) > 0 then                              
                        parse value saddr.sc with ,                             
                           lact "'"ename"'" "<"eaddr">" .                       
                     end                                                        
                  else parse value saddr.sc with ,                              
                       lact eaddr .                                             
                  eaddru = translate(eaddr)                                     
                  if ename = null then call fix_name eaddr                      
                  ltot = ltot + 1                                               
                  "TBAdd" tblname "Order"                                       
                  if rc = 0 then added = added + 1                              
                  else do                                                       
                       slact = lact                                             
                       "TBGet" tblname                                          
                       lact = slact                                             
                       "TBMod" tblname "Order"                                  
                       end                                                      
                  if length(c_to) > 0 then do                                   
                     call clean_addr_string c_to                                
                     c_to = string                                              
                     end                                                        
                  if length(c_cc) > 0 then do                                   
                     call clean_addr_string c_cc                                
                     c_cc = string                                              
                     end                                                        
                  if length(c_bcc) > 0 then do                                  
                     call clean_addr_string c_bcc                               
                     c_bcc = string                                             
                     end                                                        
                  Select                                                        
                  When translate(lact) = "TO" then do                           
                       if ename <> null then                                    
                          c_to = strip(c_to '"'ename'" <'eaddr'>')              
                       else                                                     
                          c_to = strip(c_to eaddr)                              
                       end                                                      
                  When translate(lact) = "CC" then do                           
                       if ename <> null then                                    
                          c_cc = strip(c_cc '"'ename'" <'eaddr'>')              
                       else                                                     
                          c_cc = strip(c_cc eaddr)                              
                       end                                                      
                  When translate(lact) = "BCC" then do                          
                       c_bcc = strip(c_bcc eaddr)                               
                       end                                                      
                  otherwise say "lact:" lact ename                              
                  end                                                           
                  end                                                           
               zedsmsg = added "of" ltot "added.",                              
                        ltot "flagged."                                         
               zedlmsg = "AddressFile" addrfile ,                               
                         "added to Address Table." ,                            
                         added "entries added out of",                          
                         ltot"." ltot "entries flagged."                        
                         "And the AddressFile",                                 
                         "variable has been cleared."                           
               "Setmsg msg(isrz001)"                                            
               addrfile = null                                                  
               "Vput (addrfile) Profile"                                        
               end                                                              
          return                                                                
                                                                                
        /* --------------------------------------------------------- *          
         * Test for AddressFile type                                 *          
         * --------------------------------------------------------- */         
         Test_Atype:                                                            
           if atype <> null then at = 1                                         
                            else at = 0                                         
           return                                                               
                                                                                
        /* ----------------------------------------------------- *              
         * Save and close the address table                      *              
         * ----------------------------------------------------- */             
         Close_Addr:                                                            
          "TBSave  xmitaddr Library(ISPPROF)"                                   
          "TBClose xmitaddr Library(ISPPROF)"                                   
          return                                                                
                                                                                
        /* --------------------------------------------------------- *          
         * Generate Batch JCL and Control statements                 *          
         * Then prompt the user to Browse, Edit, Copy, or Submit     *          
         * --------------------------------------------------------- */         
         Do_Batch: Procedure expose cmd cmd. null                               
         parse source with x xcmd dd .                                          
                                                                                
         call outtrap 'trap.'                                                   
         "lista sta"                                                            
         call outtrap 'off'                                                     
                                                                                
         hit = 0                                                                
         tdd = null                                                             
         wdd = "gs"random(9999)                                                 
         jcupdate = null                                                        
                                                                                
         do i = 1 to trap.0                                                     
            if tdd = dd then hit = 1                                            
            if hit = 1 then                                                     
               if tdd <> dd then leave                                          
            if left(trap.i,2) = "--" then iterate                               
            if left(trap.i,1) <> " " then do                                    
               dsn = word(trap.i,1)                                             
               end                                                              
            else do                                                             
                 if left(trap.i,3) = "   " then do                              
                 if tdd <> dd then iterate                                      
                 if "OK" <> sysdsn("'"dsn"("xcmd")'") then iterate              
                 xdsn = dsn                                                     
                 leave i                                                        
                 end                                                            
               else do                                                          
                    tdd = word(trap.i,1)                                        
                    if tdd <> dd then iterate                                   
                    if "OK" <> sysdsn("'"dsn"("xcmd")'") then iterate           
                    xdsn = dsn                                                  
                    leave i                                                     
                    end                                                         
               end                                                              
            end                                                                 
                                                                                
            Address ISPExec                                                     
            call do_jobcard                                                     
                                                                                
            head  = "XMITIP E-Mail JCL generated:" ,                            
                     date()                                                     
                                                                                
            jcl.1 = xjc1                                                        
            jcl.2 = xjc2                                                        
            jcl.3 = xjc3                                                        
            jcl.4 = xjc4                                                        
            jcl.5 = "//*----------------------------------------------*"        
            jcl.6 = "//*" left(head,44) "*"                                     
            jcl.7 = "//* Statements 1-4 are reserved for the JOB Card *"        
            jcl.8 = "//* Verify all dsnames in the command if not     *"        
            jcl.9 = "//* running under the generating userid.         *"        
            jcl.10 = "//*----------------------------------------------*"       
            jcl.11 = "//XMITIP  EXEC PGM=IKJEFT1B,DYNAMNBR=50"                  
            jcl.12 = "//SYSEXEC  DD DISP=SHR,DSN="xdsn                          
            jcl.13 = "//SYSPRINT DD  SYSOUT=*"                                  
            jcl.14 = "//SYSTSPRT DD  SYSOUT=*"                                  
            jcl.15 = "//SYSTSIN DD   *"                                         
            jcnt = 15                                                           
            do i = 2 to cmd.0 -1                                                
               jcnt = jcnt + 1                                                  
               jcl.jcnt = cmd.i                                                 
               end                                                              
            jcnt = jcnt + 1                                                     
            jcl.jcnt = "/*"                                                     
                                                                                
            Select                                                              
               When sysvar("syspref") = null                                    
                  then hlq = sysvar("sysuid")"."                                
               When sysvar("syspref") <> sysvar("sysuid")"."                    
                  then hlq = sysvar("sysuid")"."                                
               Otherwise hlq = null                                             
               end                                                              
                                                                                
            jcldd = "xmitjc"random(99)                                          
            xmitjcl = hlq"xmitip.jcl"                                           
                                                                                
            call build_jcl xmitjcl                                              
                                                                                
            do forever                                                          
               zcmd = null                                                      
               "Display Panel(xmitipgs)"                                        
               if rc > 3 then leave                                             
               Select                                                           
                 When left(zcmd,1) = "B" then do                                
                      "Control Display Save"                                    
                      "Browse Dataset("xmitjcl")"                               
                      "Control Display Restore"                                 
                      zedsmsg = "Browse Complete"                               
                      zedlmsg = zedsmsg                                         
                      "Setmsg msg(isrz001)"                                     
                      end                                                       
                 When left(zcmd,1) = "E" then do                                
                      "Control Display Save"                                    
                      "Edit Dataset("xmitjcl")"                                 
                      "Control Display Restore"                                 
                      Address TSO                                               
                      "Alloc f("wdd") shr ds("xmitjcl")"                        
                      "Execio * diskr" wdd "(finis stem jcl."                   
                      "Free  f("wdd")"                                          
                      xjc1 = jcl.1                                              
                      xjc2 = jcl.2                                              
                      xjc3 = jcl.3                                              
                      xjc4 = jcl.4                                              
                      Address ISPExec                                           
                      "Vput (xjc1 xjc2 xjc3 xjc4) Profile"                      
                      zedsmsg = "Edit Complete"                                 
                      zedlmsg = "Edit complete and job card variables" ,        
                                "updated if changed."                           
                      "Setmsg msg(isrz001)"                                     
                      end                                                       
                 When left(zcmd,1) = "C" then do                                
                      call copy_jcl                                             
                      zedsmsg = "Complete"                                      
                      zedlmsg = "Copy Operation Completed."                     
                      "Setmsg msg(isrz001)"                                     
                      end                                                       
                 When left(zcmd,1) = "J" then do                                
                      call do_jobcard2                                          
                      call build_jcl xmitjcl                                    
                      zedsmsg = "Complete"                                      
                      zedlmsg = "Job Statement Updated or Reviewed."            
                      "Setmsg msg(isrz001)"                                     
                      end                                                       
                 When left(zcmd,1) = "S" then do                                
                      Address TSO "Submit" xmitjcl                              
                      zedsmsg = "Job Submitted"                                 
                      zedlmsg = zedsmsg                                         
                      "Setmsg msg(isrz001)"                                     
                      end                                                       
                 Otherwise nop                                                  
                 end                                                            
               end                                                              
                                                                                
            Address TSO                                                         
            call msg "off"                                                      
            "Delete" xmitjcl                                                    
            return                                                              
                                                                                
        /* --------------------------------------------------------- *          
         * Copy the Generated JCL to a target Data Set               *          
         *      - test for target d/s exist                          *          
         * --------------------------------------------------------- */         
         Copy_JCL: Procedure expose xmitjcl jcl. null                           
           do forever                                                           
              "Display Panel(xmitipgc)"                                         
              if rc > 3 then return                                             
              Address TSO                                                       
              indd  = "xmiti"random(99)                                         
              outdd = "xmito"random(99)                                         
              dsn_rc = 1                                                        
              mem    = null                                                     
              if pos("(",xmit2jcl) > 0 then do                                  
                 if sysdsn(xmit2jcl) = "OK"                                     
                    then dsn_rc = 0                                             
                 if sysdsn(xmit2jcl) = "MEMBER NOT FOUND"                       
                    then dsn_rc = 0                                             
                 parse value xmit2jcl with xmit2ds"("mem")" q                   
                 if q = "'" then xmit2ds = xmit2ds"'"                           
                 end                                                            
              else do                                                           
                   if sysdsn(xmit2jcl) = "OK"                                   
                      then dsn_rc = 0                                           
                   xmit2ds = xmit2jcl                                           
                   end                                                          
              if dsn_rc = 1 then do                                             
                 outdd = "xmitc"random(99)                                      
                 "Alloc f("outdd") new spa(1,1) tr recfm(f b) lrecl(80)" ,      
                    "blksize(6160) ds("xmit2jcl")"                              
                 end                                                            
              else do                                                           
                   "Alloc f("outdd") ds("xmit2jcl") shr reuse"                  
                   end                                                          
              "Alloc f("indd") ds("xmitjcl") shr reuse"                         
              "Execio * diskw" outdd "(finis stem jcl."                         
              "Free  f("outdd indd")"                                           
              Address ISPExec                                                   
              zedsmsg = "Copied"                                                
              zedlmsg = xmitjcl "copied to" xmit2jcl                            
              "Setmsg msg(isrz001)"                                             
              if mem <> null then do                                            
                 "lminit dataid(memid) dataset("xmit2ds")"                      
                 "lmopen dataid("memid")"                                       
                 uid = sysvar("sysuid")                                         
                 "lmmstats dataid("memid") member("mem") user("uid")"           
                 "lmclose dataid("memid")"                                      
                 "lmfree  dataid("memid")"                                      
                 end                                                            
              end                                                               
           return                                                               
                                                                                
        /* --------------------------------------------------------- *          
         * Build the JCL Data Set                                    *          
         * --------------------------------------------------------- */         
        Build_JCL:                                                              
           Address TSO                                                          
           call msg "off"                                                       
           "Delete" xmitjcl                                                     
           "Alloc f("jcldd") ds("xmitjcl") new spa(5,5) Tr",                    
              "recfm(f b) lrecl(80) blksize(6160)"                              
           "Execio * diskw" jcldd "(finis stem jcl."                            
           "Free f("jcldd")"                                                    
           Address ISPExec                                                      
           return                                                               
                                                                                
        /* --------------------------------------------------------- *          
         * Ask for and update job statements                         *          
         * --------------------------------------------------------- */         
         do_jobcard2:                                                           
            jcupdate = 1                                                        
         do_jobcard:                                                            
            "Vget (xjc1 xjc2 xjc3 xjc4) Profile"                                
           if length(xjc1) = 0 then xjc1 = "//*"                                
           parse value xjc1 with "//"jname jrest                                
           sjname = left(jname,length(jname)-1)                                 
           if sjname = sysvar("sysuid") then do                                 
              call get_jobid                                                    
              jname = sjname""jobsuf                                            
              xjc1 = "//"jname jrest                                            
              end                                                               
            if strip(xjc1) = "//*" then do                                      
               call get_jobid                                                   
               xjc1 = "//"sysvar("sysuid")""jobsuf "....."                      
               jcupdate = 1                                                     
               end                                                              
            if jcupdate = 1 then do                                             
               zxjc1 = xjc1                                                     
               zxjc2 = xjc2                                                     
               zxjc3 = xjc3                                                     
               zxjc4 = xjc4                                                     
               xrc = 0                                                          
               do until xrc = 1                                                 
                  zcmd = null                                                   
                  "Display Panel(xmitipgj)"                                     
                  if zcmd = "CANCEL" then return                                
                  if rc > 3 then do                                             
                     xjc1 = strip(zxjc1)                                        
                     xjc2 = strip(zxjc2)                                        
                     xjc3 = strip(zxjc3)                                        
                     xjc4 = strip(zxjc4)                                        
                     if xjc1 = null then xjc1 = "//* "                          
                     if xjc2 = null then xjc2 = "//* "                          
                     if xjc3 = null then xjc3 = "//* "                          
                     if xjc4 = null then xjc4 = "//* "                          
                     "Vput (xjc1 xjc2 xjc3 xjc4) Profile"                       
                     jcl.1 = xjc1                                               
                     jcl.2 = xjc2                                               
                     jcl.3 = xjc3                                               
                     jcl.4 = xjc4                                               
                     xrc = 1                                                    
                     end                                                        
                  end                                                           
               end                                                              
               return                                                           
                                                                                
        /* -------------------------- *                                         
         * Get a unique jobid by      *                                         
         * bumping the last char      *                                         
         * -------------------------- */                                        
         Get_JobID:                                                             
         Address ISPExec ,                                                      
             "VGET (JOBSUF) PROFILE"                                            
         if length(jobsuf) = 0 then jobsuf = "A"                                
            else                                                                
            jobsuf = translate(jobsuf, ,                                        
                      'BCDEFGHIJKLMNOPQRSTUVWXYZA1234567890', ,                 
                      'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789')                   
         Address ISPExec ,                                                      
            "VPUT (JOBSUF) PROFILE"                                             
         return                                                                 
                                                                                
        /* --------------------------------------------------------- *          
         * Test for a Valid Format                                   *          
         * --------------------------------------------------------- */         
         Test_Format: procedure expose erc                                      
           parse arg format                                                     
           parse value format with fmt "/" .                                    
           tfmt = translate(strip(fmt))                                         
           list = "TXT RTF HTML PDF BIN ZIP ZIPBIN ZIPRTF" ,                    
                  "ZIPPDF ZIPHTML"                                              
           if wordpos(tfmt,list) = 0 then                                       
              call bad_format                                                   
           else erc = 0                                                         
           return                                                               
                                                                                
        /* --------------------------------------------------------- *          
         * Bad Format Error Message                                  *          
         * --------------------------------------------------------- */         
         Bad_Format:                                                            
            zedsmsg = "Format Error"                                            
            zedlmsg = "Specified format of '"fmt"' is invalid as",              
                      "it is not one of the valid formats:" list                
            "Setmsg Msg(isrz001)"                                               
            erc = 4                                                             
            return                                                              
                                                                                
        /***************************************************************        
        * Trap uninitialized variables                                 *        
        ***************************************************************/        
        Novalue:                                                                
                                                                                
        Say "Variable" condition("Description") "undefined in line" ,           
             sigl":"                                                            
        Say sourceline(sigl)                                                    
        Say "Contact systems support about this error."                         
        Exit 16                                                                 
